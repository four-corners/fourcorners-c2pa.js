/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
var FourCorners;
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n__webpack_require__(/*! regenerator-runtime/runtime */ \"./node_modules/regenerator-runtime/runtime.js\");\n\n__webpack_require__(/*! styles.scss */ \"./src/styles.scss\"); // import \"styles.scss\";\n\n\nvar FourCorners = /*#__PURE__*/function () {\n  function FourCorners(img, provenance, opts) {\n    var _this = this;\n\n    _classCallCheck(this, FourCorners);\n\n    // this.elems = {\n    // \twrap: wrap\n    // };\n    // this.opts = opts;\n    // const data = parseData(this);\n    // this.strings = {};\n    // this.onImgLoad = new Event(\"onImgLoad\");\n    // this.onImgFail = new Event(\"onImgFail\");\n    // this.initModule();\n    this.provenance = provenance;\n    this.c2paData = this.getC2paData();\n    this.data = this.parseData(); // console.log(this.data);\n    // this.lang = data && data.lang ? data.lang : \"en\";\n\n    this.strings = STRINGS[\"en\"]; // this.photo = getPhoto(this, data);\n\n    this.opts = Object.assign(DEFAULT_OPTS, opts); // this.opts = data ? Object.assign(this.opts, data.opts) : {};\n    // this.content = {\n    // \tauthorship: data ? data.authorship : {},\n    // \tbackstory: data ? data.backstory : {},\n    // \timagery: data ? data.imagery : {},\n    // \tlinks: data ? data.links : {},\n    // };\n\n    this.elems = {};\n    this.elems.img = img;\n    this.elems.wrap = this.addWrap();\n    this.elems.panels = this.addPanels();\n    this.elems.corners = this.addCorners(); // this.elems.media = this.wrapMedia();\n    // this.elems.cutline = this.addCutline();\n    // const self = this;\n    // Object.keys(this.elems.corners).forEach(function(cornerKey, i) {\n    // \tlet cornerElem = this.elems.corners[cornerKey];\n    // \tif(this.opts.static || cornerElem.classList.contains(\"fc-interactive\")) {\n    // \t\treturn;\n    // \t}\n    // \tcornerElem.addEventListener(\"mouseenter\", this.hoverCorner.bind(self) );\n    // \tcornerElem.addEventListener(\"mouseleave\", this.unhoverCorner.bind(self) );\n    // \tcornerElem.addEventListener(\"click\", this.clickCorner.bind(self) );\n    // \tcornerElem.classList.add(\"fc-interactive\");\n    // });\n\n    CORNER_KEYS.forEach(function (key) {\n      var panel = _this.getPanel(key);\n\n      panel.querySelector(\".fc-expand\").addEventListener(\"click\", function () {\n        _this.toggleExpandPanel();\n      });\n      panel.querySelector(\".fc-close\").addEventListener(\"click\", function () {\n        _this.closePanel(key);\n\n        _this.elems.wrap.classList.remove(\"fc-full\");\n      });\n    });\n  }\n\n  _createClass(FourCorners, [{\n    key: \"getValue\",\n    value: function getValue(key) {\n      var value;\n\n      var searchKeys = function searchKeys(obj, key) {\n        if (_typeof(obj) !== \"object\") return;\n        Object.keys(obj).forEach(function (k) {\n          if (k === key) {\n            return value = obj[k];\n          }\n\n          if (_typeof(obj[k]) === \"object\") {\n            return searchKeys(obj[k], key);\n          }\n        });\n      };\n\n      searchKeys(this.c2paData, key);\n      return value;\n    }\n  }, {\n    key: \"getC2paData\",\n    value: function getC2paData() {\n      var c2paData;\n\n      if (this.provenance) {\n        this.provenance.claims.forEach(function (claim, key) {\n          c2paData = claim.assertions.get(\"org.fourcorners.context\").data;\n        });\n      }\n\n      return c2paData;\n    }\n  }, {\n    key: \"parseData\",\n    value: function parseData() {\n      var parseArray = function parseArray(arr) {\n        if (arr) {\n          arr = arr.map(function (obj) {\n            var newObj = {};\n            var keys = Object.keys(obj).map(function (k, i) {\n              var splitArr = k.replace(\"fourcorners:\", \"\").split(/(?=[A-Z])/);\n              var newKey = splitArr[splitArr.length - 1].toLowerCase();\n              newObj[newKey] = obj[k];\n            });\n            return newObj;\n          });\n        }\n\n        return arr;\n      };\n\n      var data = {\n        \"authorship\": {\n          \"caption\": this.getValue(\"fourcorners:authorshipCaption\"),\n          \"credit\": this.getValue(\"fourcorners:authorshipCredit\"),\n          \"license\": {\n            \"type\": this.getValue(\"fourcorners:authorshipLicenseType\"),\n            \"year\": this.getValue(\"fourcorners:authorshipLicenseYear\"),\n            \"holder\": this.getValue(\"fourcorners:authorshipLicenseHolder\"),\n            \"label\": this.getValue(\"fourcorners:authorshipLicenseLabel\"),\n            \"desc\": this.getValue(\"fourcorners:authorshipLicenseDesc\"),\n            \"url\": this.getValue(\"fourcorners:authorshipLicenseUrl\")\n          },\n          \"ethics\": {\n            \"label\": this.getValue(\"fourcorners:authorshipEthicsLabel\"),\n            \"description\": this.getValue(\"fourcorners:authorshipEthicsDescription\")\n          },\n          \"bio\": this.getValue(\"fourcorners:authorshipBio\"),\n          \"website\": this.getValue(\"fourcorners:authorshipWebsite\"),\n          \"contactInfo\": this.getValue(\"fourcorners:authorshipContactInfo\"),\n          \"contactRights\": this.getValue(\"fourcorners:authorshipContactRights\")\n        },\n        \"backstory\": {\n          \"text\": this.getValue(\"fourcorners:backstoryText\"),\n          \"media\": parseArray(this.getValue(\"fourcorners:backstoryMedia\"))\n        },\n        \"imagery\": {\n          \"media\": parseArray(this.getValue(\"fourcorners:imageryMedia\"))\n        },\n        \"links\": {\n          \"links\": parseArray(this.getValue(\"fourcorners:linksLinks\"))\n        }\n      };\n      return data; // // const loopKeys = (obj, newData) => {\n      // // \tlet arr = [];\n      // // \tif(typeof obj === \"object\") {\n      // // \t\tarr = Object.keys(obj);\n      // // \t} else if(typeof obj === \"array\") {\n      // // \t\tarr = obj;\n      // // \t} else {\n      // // \t\treturn;\n      // // \t}\n      // // \tarr.forEach(k => {\n      // // \t\tif(k.includes(\"fourcorners\")) {\n      // // \t\t\tconst keys = k.replace(\"fourcorners:\",\"\").split(/(?=[A-Z])/);\n      // // \t\t\tconsole.log(keys);\n      // // \t\t\tkeys.forEach(k2 => {\n      // // \t\t\t\tk2 = k2.charAt(0).toLowerCase() + k2.slice(1);\n      // // \t\t\t\tif(!newData.hasOwnProperty(keys[0])) {\n      // // \t\t\t\t\tnewData[k2] = obj[k];\n      // // \t\t\t\t\tconsole.log(obj[k], newData);\n      // // \t\t\t\t\t// loopKeys(obj[k], newData);\n      // // \t\t\t\t}\n      // // \t\t\t});\n      // // \t\t\t// if(k) {\n      // // \t\t\t// \treturn value = obj[k];\n      // // \t\t\t// }\n      // // \t\t\t// if(typeof obj[k] === \"object\") {\n      // // \t\t\t// \treturn loopKeys(obj[k], newData);\n      // // \t\t\t// }\n      // // \t\t} else {\n      // // \t\t\treturn newData;\n      // // \t\t}\n      // // \t});\n      // // \treturn newData;\n      // // \tconsole.log(newData);\n      // \t}\n    }\n  }, {\n    key: \"addWrap\",\n    value: function addWrap() {\n      var wrap = document.createElement(\"div\");\n      this.elems.img.parentNode.insertBefore(wrap, this.elems.img);\n      wrap.appendChild(this.elems.img);\n      wrap.classList.add(\"fc-embed\");\n      return wrap;\n    } // setUpData(data) {\n    // \treturn this;\n    // }\n    // initModule() {\n    // \tconst self = this,\n    // \t\t\t\twrap = this.elems.wrap;\n    // \twrap.classList.add(\"fc-init\");\n    // \tif(this.opts.dark) {\n    // \t\twrap.classList.add(\"fc-dark\");\n    // \t}\n    // \tif(this.opts.static) {\n    // \t\twrap.classList.add(\"fc-static\");\n    // \t} else {\n    // \t\twrap.addEventListener(\"click\", function(e) {\n    // \t\t\tconst onPanels = isChildOf(e.target, this.getPanel());\n    // \t\t\tconst onCorners = isChildOf(e.target, this.elems.corners);\n    // \t\t\tconst inCreator = isChildOf(e.target, Array.from(document.querySelectorAll(\"#creator\")));\n    // \t\t\tif(!onPanels && !onCorners && !inCreator) {\n    // \t\t\t\tthis.closePanel();\n    // \t\t\t\tthis.elems.wrap.classList.remove(\"fc-full\");\n    // \t\t\t}\n    // \t\t});\n    // \t}\n    // \twrap.lang = this.lang;\n    // \tif([\"ar\"].includes(this.lang)) {\n    // \t\twrap.dir = \"rtl\";\n    // \t} else {\n    // \t\twrap.dir = \"ltr\";\n    // \t}\n    // \twindow.addEventListener(\"resize\", this.resizeModule.bind(this));\n    // \tthis.resizeModule();\n    // }\n    // updateModule(data) {\n    // \tif(!data) {\n    // \t\tconst data = parseData(this);\n    // \t}\n    // \tthis.setUpData(data);\n    // \tthis.initModule();\n    // \treturn this;\n    // }\n\n  }, {\n    key: \"getPanel\",\n    value: function getPanel(cornerKey) {\n      return this.elems.wrap.querySelector(\".fc-panel[data-fc-key=\\\"\".concat(cornerKey, \"\\\"]\"));\n    }\n  }, {\n    key: \"openPanel\",\n    value: function openPanel(cornerKey) {\n      var _this2 = this;\n\n      var elems = this.elems,\n          wrap = elems.wrap,\n          corners = elems.corners,\n          panels = elems.panels,\n          corner = elems.corners[cornerKey],\n          panel = this.getPanel(cornerKey);\n      wrap.classList.remove(\"fc-full\");\n      wrap.classList.add(\"fc-active\");\n      wrap.setAttribute(\"data-fc-active\", cornerKey);\n      corner.classList.add(\"fc-active\");\n      panel.classList.add(\"fc-active\");\n      CORNER_KEYS.forEach(function (key) {\n        if (key !== cornerKey) _this2.closePanel(key);\n      });\n    }\n  }, {\n    key: \"closePanel\",\n    value: function closePanel(cornerKey) {\n      var elems = this.elems,\n          wrap = elems.wrap,\n          corners = elems.corners,\n          panels = elems.panels,\n          corner = corners[cornerKey],\n          panel = this.getPanel(cornerKey);\n      wrap.classList.remove(\"fc-full\", \"fc-active\");\n      wrap.setAttribute(\"data-fc-active\", \"\");\n      corner.classList.remove(\"fc-active\");\n      panel.classList.remove(\"fc-active\");\n    }\n  }, {\n    key: \"toggleExpandPanel\",\n    value: function toggleExpandPanel() {\n      this.elems.wrap.classList.toggle(\"fc-full\");\n    }\n  }, {\n    key: \"hoverCorner\",\n    value: function hoverCorner(e) {\n      var cornerElem = e.target;\n      cornerElem.classList.add(\"fc-hover\");\n    }\n  }, {\n    key: \"unhoverCorner\",\n    value: function unhoverCorner(e) {\n      var cornerElem = e.target;\n      cornerElem.classList.remove(\"fc-hover\");\n    }\n  }, {\n    key: \"clickCorner\",\n    value: function clickCorner(e) {\n      var cornerElem = e.target,\n          cornerKey = cornerElem.getAttribute(\"data-fc-key\"),\n          activeKey = this.elems.wrap.getAttribute(\"data-fc-active\");\n\n      if (cornerKey === activeKey) {\n        this.closePanel(cornerKey);\n      } else {\n        this.openPanel(cornerKey);\n      }\n    }\n  }, {\n    key: \"addCorners\",\n    value: function addCorners() {\n      var _this3 = this;\n\n      var corners = {},\n          data = this.data,\n          strings = this.strings,\n          elems = this.elems,\n          wrap = elems.wrap;\n      CORNER_KEYS.forEach(function (cornerKey) {\n        var cornerTitle = strings[cornerKey] || null,\n            cornerElem = document.createElement(\"div\");\n        cornerElem.setAttribute(\"data-fc-key\", cornerKey);\n        cornerElem.title = \"View \".concat(cornerTitle);\n        cornerElem.classList.add(\"fc-corner\", \"fc-\".concat(cornerKey));\n\n        var cornerIsEmpty = function () {\n          if (data.hasOwnProperty(cornerKey)) {\n            if (Object.keys(data[cornerKey]).length) return false;\n            return true;\n          } else {\n            return true;\n          }\n        }();\n\n        if (cornerIsEmpty) {\n          cornerElem.classList.add(\"fc-empty\");\n        }\n\n        wrap.appendChild(cornerElem);\n        cornerElem.addEventListener(\"mouseenter\", _this3.hoverCorner.bind(_this3));\n        cornerElem.addEventListener(\"mouseleave\", _this3.unhoverCorner.bind(_this3));\n        cornerElem.addEventListener(\"click\", _this3.clickCorner.bind(_this3));\n        cornerElem.classList.add(\"fc-interactive\");\n        corners[cornerKey] = cornerElem;\n      });\n      return corners;\n    }\n  }, {\n    key: \"addPanels\",\n    value: function addPanels() {\n      var _this4 = this;\n\n      var data = this.data,\n          strings = this.strings,\n          elems = this.elems,\n          wrap = elems.wrap,\n          panels = {};\n      CORNER_KEYS.forEach(function (cornerKey) {\n        var cornerTitle = strings[cornerKey] || null,\n            panelData = data[cornerKey];\n        var panelInner = \"\";\n\n        switch (cornerKey) {\n          case \"authorship\":\n            panelInner = _this4.buildAuthorship();\n            break;\n\n          case \"backstory\":\n            panelInner = _this4.buildBackstory();\n            break;\n\n          case \"imagery\":\n            panelInner = _this4.buildImagery();\n            break;\n\n          case \"links\":\n            panelInner = _this4.buildLinks();\n            break;\n        }\n\n        var panelTile = strings[cornerKey];\n        var panelClass = \"fc-panel fc-\".concat(cornerKey);\n        var panelHTML = \"<div data-fc-key=\\\"\".concat(cornerKey, \"\\\" class=\\\"\").concat(panelClass, \"\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"fc-panel-title\\\">\\n\\t\\t\\t\\t\\t\\t<span>\").concat(panelTile, \"</span>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"fc-icon fc-expand\\\" title=\\\"Expand this panel\\\"></div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"fc-icon fc-close\\\" title=\\\"Close this panel\\\"></div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"fc-panel-title fc-pseudo\\\">\\n\\t\\t\\t\\t\\t\\t<span>\").concat(CORNER_KEYS.indexOf(cornerKey), \"</span>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\").concat(panelInner ? \"<div class=\\\"fc-scroll\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"fc-inner\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\".concat(panelInner, \"\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\") : \"\", \"\\n\\t\\t\\t\\t</div>\");\n        elems.wrap.innerHTML += panelHTML;\n        panels[cornerKey] = _this4.getPanel(cornerKey);\n      });\n      return panels;\n    }\n  }, {\n    key: \"buildAuthorship\",\n    value: function buildAuthorship() {\n      var data = this.data,\n          panelData = data.authorship;\n      var html,\n          innerHtml = \"\";\n      innerHtml += panelData.caption ? \"<div class=\\\"fc-field\\\">\\n\\t\\t\\t\\t<em>\".concat(panelData.caption, \"</em>\\n\\t\\t\\t</div>\") : \"\";\n      var creditHtml = [];\n      var hasCopyright = panelData.license.type === \"copyright\";\n\n      if (panelData.licenseYear) {\n        creditHtml.push(\"<span>\".concat(panelData.license.year, \"</span>\"));\n      }\n\n      if (panelData.credit) {\n        creditHtml.push(\"<span>\".concat(panelData.credit).concat(panelData.license.holder ? \"/\".concat(panelData.license.holder) : \"\", \"</span>\"));\n      }\n\n      innerHtml += hasCopyright || panelData.credit ? \"<div class=\\\"fc-field\\\" data-fc-field=\\\"credit\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"fc-content\\\">\\n\\t\\t\\t\\t\\t\\t\".concat(hasCopyright ? \"<div class=\\\"fc-copyright\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\".concat(creditHtml.join(\"\"), \"\\n\\t\\t\\t\\t\\t\\t\\t</div>\") : \"<div>\".concat(panelData.credit, \"</div>\"), \"\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\") : \"\";\n      innerHtml += panelData.license && panelData.license.label && panelData.license.type === \"commons\" ? \"<div class=\\\"fc-field\\\" data-fc-field=\\\"license\\\">\\n\\t\\t\\t\\t\\t<span class=\\\"fc-label\\\">\".concat(this.strings.license, \"</span>\\n\\t\\t\\t\\t\\t<span class=\\\"fc-content\\\">\\n\\t\\t\\t\\t\\t\\t\").concat(panelData.license.url ? \"<a href=\\\"\".concat(panelData.license.url, \"\\\" target=\\\"_blank\\\">\\n\\t\\t\\t\\t\\t\\t\\t\").concat(panelData.license.label ? panelData.license.label : \"\", \"\\n\\t\\t\\t\\t\\t\\t</a>\") : panelData.license.label ? panelData.license.label : \"\", \"\\n\\t\\t\\t\\t\\t</span>\\n\\t\\t\\t\\t</div>\") : \"\";\n      innerHtml += panelData.ethics && panelData.ethics.desc ? \"<div class=\\\"fc-field\\\" data-fc-field=\\\"ethics\\\">\\n\\t\\t\\t\\t\\t<span class=\\\"fc-label\\\">\".concat(this.strings.coe, \"</span>\\n\\t\\t\\t\\t\\t<span class=\\\"fc-content\\\">\").concat(panelData.ethics.desc, \"</span>\\n\\t\\t\\t\\t</div>\") : \"\";\n      innerHtml += panelData.bio ? \"<div class=\\\"fc-field\\\">\\n\\t\\t\\t\\t<span class=\\\"fc-label\\\">\".concat(this.strings.bio, \"</span>\\n\\t\\t\\t\\t\").concat(panelData.bio, \"\\n\\t\\t\\t</div>\") : \"\";\n      innerHtml += panelData.website || panelData.contact.info || panelData.contact.rights ? \"<div class=\\\"fc-field fc-contact\\\">\\n\\n\\t\\t\\t\\t\".concat(panelData.website ? \"<div class=\\\"fc-field fc-card\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"fc-label\\\">\".concat(this.strings.website, \"</div>\\n\\t\\t\\t\\t\\t\").concat(this.createLink(panelData.website), \"\\n\\t\\t\\t\\t</div>\") : \"\", \"\\n\\n\\t\\t\\t\\t\").concat(panelData.contactInfo ? \"<div class=\\\"fc-field fc-card\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"fc-label\\\">\".concat(this.strings.info, \"</div>\\n\\t\\t\\t\\t\\t\").concat(this.createLink(panelData.contactInfo), \"\\n\\t\\t\\t\\t</div>\") : \"\", \"\\n\\n\\t\\t\\t\\t\").concat(panelData.contactRights ? \"<div class=\\\"fc-field fc-card\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"fc-label\\\">\".concat(this.strings.rights, \"</div>\\n\\t\\t\\t\\t\\t\").concat(this.createLink(panelData.contactRights), \"\\n\\t\\t\\t\\t</div>\") : \"\", \"\\n\\n\\t\\t\\t</div>\") : \"\";\n\n      if (innerHtml.length) {\n        html = \"<div class=\\\"fc-row\\\">\".concat(innerHtml, \"</div>\");\n      }\n\n      return html;\n    }\n  }, {\n    key: \"buildBackstory\",\n    value: function buildBackstory() {\n      var _this5 = this;\n\n      var data = this.data,\n          panelData = data.backstory;\n      var html = \"\".concat(panelData.text ? \"<div class=\\\"fc-row\\\">\\n\\t\\t\\t\\t\".concat(this.wrapParagraphs(panelData.text), \"\\n\\t\\t\\t</div>\") : \"\", \"\\n\\t\\t\\t\").concat(panelData.media && panelData.media.map(function (obj, i) {\n        _this5.wrapExternal(_this5, obj, \"backstory\", i);\n\n        return \"<div class=\\\"fc-row\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"fc-media\\\" data-fc-source=\\\"\".concat(obj.source, \"\\\"></div>\\n\\t\\t\\t\\t\\t\\t\").concat(obj.caption ? \"<div class=\\\"fc-sub-caption\\\">\".concat(obj.caption, \"</div>\") : \"\", \"\\n\\t\\t\\t\\t\\t\\t\").concat(obj.credit ? \"<div class=\\\"fc-sub-credit\\\">\".concat(obj.credit, \"</div>\") : \"\", \"\\n\\t\\t\\t\\t\\t</div>\");\n      }).join(\"\"));\n      return html;\n    }\n  }, {\n    key: \"buildImagery\",\n    value: function buildImagery() {\n      var _this6 = this;\n\n      var data = this.data,\n          elems = this.elems,\n          wrap = elems.wrap,\n          panelData = data.imagery;\n      var html = \"\".concat(panelData.media && panelData.media.map(function (obj, index) {\n        var isExternal = [\"selfagram\", \"youtube\", \"vimeo\"].includes(obj.source);\n        return \"<div class=\\\"fc-row\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"fc-media\\\" data-fc-source=\\\"\".concat(obj.source, \"\\\" data-fc-index=\\\"\").concat(index, \"\\\">\\n\\t\\t\\t\\t\\t\\t\\t\").concat(_this6.buildMedia(obj, index), \"\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\").concat(obj.caption ? \"<div class=\\\"fc-sub-caption\\\">\".concat(obj.caption, \"</div>\") : \"\", \"\\n\\t\\t\\t\\t\\t\\t\").concat(obj.credit ? \"<div class=\\\"fc-sub-credit\\\">\".concat(obj.credit, \"</div>\") : \"\", \"\\n\\t\\t\\t\\t\\t\\t\").concat(isExternal ? \"<div class=\\\"fc-sub-credit\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\".concat(isExternal && obj.url ? \"<a href=\\\"\".concat(obj.url, \"\\\" target=\\\"_blank\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tView on \").concat(_this6.extractRootDomain(obj.url), \"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</a>\") : \"\", \"\\n\\t\\t\\t\\t\\t\\t\\t\\t\").concat(isExternal && !obj.url ? \"View on \".concat(_this6.extractRootDomain(obj.url)) : \"\", \"\\n\\t\\t\\t\\t\\t\\t\\t</div>\") : \"\", \"\\n\\t\\t\\t\\t\\t</div>\");\n      }).join(\"\"));\n      return html;\n    }\n  }, {\n    key: \"buildLinks\",\n    value: function buildLinks() {\n      var _this7 = this;\n\n      var data = this.data,\n          elems = this.elems,\n          wrap = elems.wrap,\n          panelData = data.links;\n      var html = \"\".concat(panelData.links && panelData.links.filter(function (obj) {\n        return obj.url;\n      }).map(function (obj, index) {\n        var rootUrl = _this7.extractRootDomain(obj.url);\n\n        var text = \"\".concat(obj.title ? obj.title : rootUrl, \"<div class=\\\"fc-sub-url\\\">\").concat(rootUrl, \"</div>\");\n        return \"<div class=\\\"fc-row\\\">\\n\\t\\t\\t\\t\\t\\t\\t\".concat(_this7.createLink(obj.url, text, [\"fc-card\"]), \"\\n\\t\\t\\t\\t\\t\\t</div>\");\n      }).join(\"\"));\n      return html;\n    }\n  }, {\n    key: \"buildMedia\",\n    value: function buildMedia(obj, index) {\n      var source = obj.source,\n          url = obj.url;\n\n      if (source === \"image\") {\n        return \"<img src=\\\"\".concat(url, \"\\\" />\");\n        this.loadMedia(obj);\n      }\n    } // addPhoto() {\n    // \tlet photo, img,\n    // \t\t\tself = this,\n    // \t\t\twrap = this.elems.wrap,\n    // \t\t\twidth = this.photo ? this.photo.width : \"\",\n    // \t\t\theight = this.photo ? this.photo.height : \"\",\n    // \t\t\tratio = width/height,\n    // \t\t\timgSelector = \".fc-img\";\n    // \twrap.style.paddingBottom = 100/ratio+\"%\";\n    // \timg = wrap.querySelector(imgSelector);\n    // \tif(!img) {\n    // \t\twrap.classList.add(\"fc-empty\");\n    // \t}\n    // \tlet pseudoImg = new Image;\n    // \twrap.classList.add(\"fc-loading\");\n    // \tpseudoImg.onload = (e) => {\n    // \t\twrap.style.paddingBottom = \"\";\n    // \t\twrap.classList.remove(\"fc-loading\");\n    // \t\twrap.dispatchEvent(this.onImgLoad);\n    // \t}\n    // \tpseudoImg.onerror = (e) => {\n    // \t\twrap.classList.remove(\"fc-loading\");\n    // \t\twrap.classList.add(\"fc-empty\");\n    // \t\twrap.dispatchEvent(this.onImgFail);\n    // \t}\n    // \tpseudoImg.src = img ? img.src : \"\";\n    // \treturn img;\n    // }\n    // addCutline() {\n    // \tconst content = this.content.authorship;\n    // \tif(!content&&!this.opts.caption&&!this.opts.credit&&!this.opts.logo) {return}\n    // \tconst data = this.content[\"authorship\"];\n    // \tif(!data) {return}\n    // \tconst wrap = this.elems.wrap;\n    // \tconst caption = this.opts.caption && content.caption ? `<span class=\"fc-caption\">${content.caption}</span>`: \"\";\n    // \tconst credit = this.opts.credit && (content.credit||content.license.holder) ?\n    // \t\t`<div class=\"fc-credit\">\n    // \t\t\t${(content.credit ? `<span>${content.credit}</span>` : \"\")+(content.license.holder ? `<span>${content.license.holder}</span>` : \"\")}\n    // \t\t</div>`\n    // \t: \"\";\n    // \tconst logo = this.opts.logo ? `<a href=\"https://fourcornersproject.org\" target=\"_blank\" class=\"fc-logo\" title=\"This is a Four Corners photo\"></a>`: \"\";\n    // \tconst cutline =\n    // \t\t`<div class=\"fc-cutline\">\n    // \t\t\t${caption+credit+logo}\n    // \t\t</div>`;\n    // \twrap.insertAdjacentHTML(\"afterend\", cutline);\n    // \treturn cutline;\n    // }\n    // wrapMedia() {\n    // \tconst self = this,\n    // \t\t\t\timageryContent = this.content.imagery;\n    // \tif(!imageryContent) {return}\n    // \tconst media = imageryContent.media;\n    // \tif(!media) {return}\n    // \tconst mediaKeys = Object.keys(media);\n    // \tmediaKeys.forEach(function(key, i) {\n    // \t\tconst obj = media[key];\n    // \t\tif(obj.source == \"image\" || !obj.source) {\n    // \t\t\twrapImage(self, obj, \"imagery\", i);\n    // \t\t} else {\n    // \t\t\twrapExternal(self, obj, \"imagery\", i);\n    // \t\t}\n    // \t});\n    // }\n    // resizeModule(e) {\n    // \tconst panels = this.getPanel();\n    // \tif(!panels){return}\n    // \tObject.keys(panels).forEach(function(cornerKey, i) {\n    // \t\tresizePanel(panels[cornerKey]);\n    // \t});\n    // }\n    // const getPhoto = (self, data) => {\n    // \tif(data && data.photo && data.photo.src) {\n    // \t\treturn data.photo;\n    // \t}\n    // \tconst img = this.elems.wrap ? this.elems.wrap.querySelector(\"img\") : \"\",\n    // \t\t\t\timgSrc = img ? img.src : \"\";\n    // \treturn {\n    // \t\tsrc: imgSrc\n    // \t}\n    // }\n    // const resizePanel = (panel) => {\n    // \tif(typeof panel.querySelector!==\"function\"){return}\n    // \tconst panelScroll = panel.querySelector(\".fc-scroll\");\n    // \tif(!panelScroll){return}\n    // \tif( panelScroll.scrollHeight > panelScroll.clientHeight ) {\n    // \t\tpanel.classList.add(\"fc-overflow\");\n    // \t} else {\n    // \t\tpanel.classList.remove(\"fc-overflow\");\n    // \t}\n    // }\n    // const createRow = (data, obj, includeLabel) => {\n    // \tconst label = includeLabel ? `<div class=\"fc-label\">${obj.label}</div>` : \"\";\n    // \tconst content = data[obj.prop];\n    // \treturn data[obj.prop] ?\n    // \t\t`<div class=\"fc-row\">\n    // \t\t\t${label}\n    // \t\t\t${content}\n    // \t\t</div>` : \"\";\n    // }\n    // const wrapImage = (self, obj, panelKey, index) => {\n    // \tif(!obj.url){ return }\n    // \tconst pseudoImg = new Image();\n    // \tpseudoImg.onload = (e) => {\n    // \t\tconst img = `<img src=\"${obj.url}\"/>`;\n    // \t\tconst panel = this.elems.panels[panelKey];\n    // \t\tlet media = panel.querySelectorAll(\".fc-media\")[index];\n    // \t\tmedia.innerHTML += img;\n    // \t}\n    // \tpseudoImg.src = obj.url;\n    // \treturn;\n    // }\n\n  }, {\n    key: \"wrapExternal\",\n    value: function wrapExternal(self, obj, panelKey, index) {\n      var _this8 = this;\n\n      //requests third party APIs to retrieve wrap data\n      var req = \"\";\n\n      switch (obj.source) {\n        case \"youtube\":\n          req = \"https://nowrap.com/wrap?url=\" + obj.url;\n          break;\n\n        case \"vimeo\":\n          req = \"https://vimeo.com/api/owrap.json?url=\" + obj.url;\n          break;\n\n        case \"soundcloud\":\n          req = \"https://soundcloud.com/owrap?format=json&url=\" + obj.url;\n          break;\n\n        case \"selfagram\":\n          req = \"https://api.selfagram.com/owrap/?url=\" + obj.url;\n          break;\n\n        default:\n          return false;\n          break;\n      }\n\n      var headers = new Headers();\n      fetch(req, {\n        method: \"GET\",\n        headers: headers\n      }).then(function (res) {\n        if (!res.ok) {\n          throw Error(res.statusText);\n        }\n\n        return res.json();\n      }).then(function (res) {\n        var panel = _this8.elems.panels[panelKey];\n        var subMedia = panel.querySelectorAll(\".fc-media\")[index],\n            html = \"\";\n\n        if (obj.source == \"selfagram\") {\n          html = \"<img src=\\\"\".concat(res.thumbnail_url, \"\\\"/>\");\n        } else {\n          html = res.html;\n        }\n\n        if (Number.isInteger(res.width, res.height)) {\n          var ratio = res.height / res.width;\n          subMedia.classList.add(\"fc-responsive\");\n          subMedia.style.paddingBottom = ratio * 100 + \"%\";\n        }\n\n        subMedia.innerHTML = html;\n      })[\"catch\"](function (err) {\n        console.warn(\"Four Corners cannot load this media source: \" + obj.url, err);\n      });\n    } // const parseData = (self) => {\n    // \tif(!this.elems||!this.elems.wrap) {return}\n    // \tconst wrap = this.elems.wrap,\n    // \t\t\t\tscriptTag = wrap.querySelector(\"script\");\n    // \tlet stringData;\n    // \tif(scriptTag) {\n    // \t\t//If wrap JSON is stored in child script tag (NEW)\n    // \t\tstringData = scriptTag.innerHTML;\n    // \t\tscriptTag.remove();\n    // \t} else if(wrap.hasAttribute(\"data-fc\")) {\n    // \t\t//If wrap JSON is stored in data-fc attributte (OLD)\n    // \t\tstringData = wrap.dataset.fc;\n    // \t\tdelete wrap.dataset.fc;\n    // \t}\n    // \tif(!stringData){\n    // \t\treturn\n    // \t}\n    // \treturn JSON.parse(stringData);\n    // }\n    // const isChildOf = (target, ref) => {\n    // \tlet answer = false;\n    // \tObject.entries(ref).forEach(([key, elem]) => {\n    // \t\tif(elem&&elem.contains&&elem.contains(target)) {\n    // \t\t\tanswer = true;\n    // \t\t}\n    // \t});\n    // \treturn answer;\n    // }\n\n  }, {\n    key: \"wrapParagraphs\",\n    value: function wrapParagraphs(val) {\n      var array = val.split(/\\n/g);\n      var text = [];\n      var html = array ? \"\".concat(array.map(function (str, i) {\n        return str ? \"<p>\".concat(str, \"</p>\") : \"<br/>\";\n      }).join(\"\")) : \"\";\n      return html;\n    }\n  }, {\n    key: \"createLink\",\n    value: function createLink(href, text) {\n      var classes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n\n      if (!text) {\n        text = this.extractRootDomain(href);\n      } //Needs better validatoor \n\n\n      if (href.indexOf(\"@\") > -1) {\n        href = \"mailto:\".concat(href);\n      }\n\n      return \"<a href=\\\"\".concat(href, \"\\\" target=\\\"_blank\\\" class=\\\"\").concat(classes.join(\" \"), \"\\\">\").concat(text, \"</a>\");\n    }\n  }, {\n    key: \"extractHostname\",\n    value: function extractHostname(url) {\n      var hostname;\n      if (!url) return null;\n\n      if (url.indexOf(\"//\") > -1) {\n        hostname = url.split(\"/\")[2];\n      } else {\n        hostname = url.split(\"/\")[0];\n      }\n\n      hostname = hostname.split(\":\")[0];\n      hostname = hostname.split(\"?\")[0];\n      return hostname;\n    }\n  }, {\n    key: \"extractRootDomain\",\n    value: function extractRootDomain(url) {\n      if (!url) return null;\n      var domain = this.extractHostname(url);\n      var splitArr = domain.split(\".\");\n      var arrLen = splitArr.length;\n\n      if (arrLen > 2) {\n        domain = splitArr[arrLen - 2] + \".\" + splitArr[arrLen - 1];\n\n        if (splitArr[arrLen - 2].length == 2 && splitArr[arrLen - 1].length == 2) {\n          domain = splitArr[arrLen - 3] + \".\" + domain;\n        }\n      }\n\n      return domain;\n    } // const hasField = (data, fieldKey, subFieldKey) => {\n    // \tif(!data){return false}\n    // \tif(!data[fieldKey]){return false}\n    // \tif(typeof data[fieldKey] == \"object\") {\n    // \t\tif(!Object.keys(data[fieldKey]).length){return false}\t\n    // \t} else {\n    // \t\tif(!data[fieldKey].length){return false}\t\n    // \t}\n    // \tif(!subFieldKey||!data[fieldKey][subFieldKey]){return false}\n    // \tif(typeof data[fieldKey][subFieldKey] == \"object\") {\n    // \t\tif(!Object.keys(data[fieldKey][subFieldKey]).length){return false}\t\n    // \t} else {\n    // \t\tif(!data[fieldKey][subFieldKey].length){return false}\t\n    // \t}\n    // \treturn true;\n    // }\n\n  }]);\n\n  return FourCorners;\n}();\n\nvar CORNER_KEYS = [\"authorship\", \"backstory\", \"imagery\", \"links\"];\nvar STRINGS = {\n  en: {\n    authorship: \"Authorship\",\n    backstory: \"Backstory\",\n    imagery: \"Related Imagery\",\n    links: \"Links\",\n    license: \"License\",\n    coe: \"Code of ethics\",\n    bio: \"Bio\",\n    website: \"Website\",\n    info: \"For more info\",\n    rights: \"For reproduction rights\"\n  },\n  ar: {\n    authorship: \"التأليف\",\n    backstory: \"القصة وراء الصورة \",\n    imagery: \"الصور ذات الصلة\",\n    links: \"الروابط\",\n    license: \"الترخيص\",\n    coe: \"ميثاق أخلاقيات\",\n    bio: \"السيرة الذاتية\",\n    website: \"الموقع الكتروني\",\n    info: \"لمزيد من المعلومات\",\n    rights: \"للحصول على حقوق النسخ\"\n  }\n};\nvar DEFAULT_OPTS = {\n  selector: \"img\",\n  \"static\": false,\n  caption: false,\n  credit: false,\n  logo: false,\n  active: \"\"\n};\nmodule.exports = FourCorners;\n\n//# sourceURL=webpack://FourCorners/./src/index.js?");

/***/ }),

/***/ "./src/styles.scss":
/*!*************************!*\
  !*** ./src/styles.scss ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://FourCorners/./src/styles.scss?");

/***/ }),

/***/ "./node_modules/regenerator-runtime/runtime.js":
/*!*****************************************************!*\
  !*** ./node_modules/regenerator-runtime/runtime.js ***!
  \*****************************************************/
/***/ ((module) => {

eval("/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n   true ? module.exports : 0\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n\n\n//# sourceURL=webpack://FourCorners/./node_modules/regenerator-runtime/runtime.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	FourCorners = __webpack_exports__;
/******/ 	
/******/ })()
;